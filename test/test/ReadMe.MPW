#	MPW adaptation of STLport
#	
#	written by Tsutomu Yoshida, Minokamo, Japan. Aug/14/1998
#	#*TY 05/23/1999 - updated for STLport-3.2
#	
#	this document describes the detailed instructions for building and running the STL testsuite (stl_test) as the mpw tools.


#	*** how to setup STL under MPW environment:
#	===============================================================================================================
#	(1) run the MPW script shown below to setup the shell variable {STL} to point to the STLport312
#	directory. to run this script, open this file (ReadMe.MPW) under MPW and select the script block below
#	and then press "enter' key (not the 'return' key).
#
#	Note: 	this setup script will install a startup script named "STL_Folder_SetUp" 
#			under "{ShellDirectory}Startup Items:" directory.
#	
#(# INSTALL (1)
	unset STL # to unconditionally re-setup STL variable
	if !"{STL}"
		Set exit 0
		Set temp "{Boot}"
		unset STL
		if "{active}" =~ /(Å)¨1:Å/
			directory "{¨1}:"
			set temp "{¨1}:::"
			(Set temp `ResolveAlias "{¨1}:::stl:"`)·dev:null
		end
		Loop
		
			If  !"`Exists "{temp}stl_config.h"`"
				Alert "The folder you have chosen, ¶'{temp}¶', does not appear to be the correct STL folder."¶
				"¶nPlease choose the main STLport folder (the folder which contains stl_config.h)."
			Else
				Break
			End
			Set temp "`(GetFileName "{temp}" -q -d -m "Where is your ¶"STLport¶" folder?")³dev:null`"
			exit if !"{temp}"
		End
		Set -e STL "{temp}"
		set STL > "{ShellDirectory}Startup Items:!STL_Folder_SetUp" # save the {STL} setting so that you do not have to run this script every time mpw is booted.
		unset temp
		Set exit 1
	else
		alert "the path to ¶"¶{STL¶}¶" has been set up as: ¶n'{STL}' .¶nMake sure this is up to date."
	end
#)#

#	===============================================================================================================
#	(2) make aliases for the files in {STL}config: subdirectory. If you have access to MAMakeAlias tool, execute
#	the script below. Otherwise make aliases manually, rename them, and put them into {STL} main directory.
#
#(# INSTALL (2)
	set exit 0
	if !"`which MAMakeAlias`"
		alias MAMakeAlias duplicate
	end
	set exit 1
	MAMakeAlias  "{STL}config:stlconf.h"		"{STL}config/stlconf.h"
	MAMakeAlias  "{STL}config:stlcomp.h"		"{STL}config/stlcomp.h"
	MAMakeAlias  "{STL}config:stl_confix.h"		"{STL}config/stl_confix.h"
	MAMakeAlias  "{STL}config:stl_apple.h"		"{STL}config/stl_apple.h"
	unalias MAMakeAlias
#)#

#	===============================================================================================================
#	(3) fix problem in "{cincludes}"iostream.h
#
#(# INSTALL (3)
	duplicate "{cincludes}"iostream.h "{cincludes}"iostream.h.ORIGINAL -n
	file "{cincludes}"iostream.h; line 127
	streamedit "{cincludes}"iostream.h -o "{cincludes}"iostream.h ¶
		-e '/¥    operator const void\*\(\) const{/ change "//¥¥¥ Modified ¥¥¥ ".'
	file "{cincludes}"iostream.h; line 127
	Alert '"{CIncludes}iostream.h" source code have been modified.'¶n¶n'Save after review.'
#)#



#	*** how to try out the testsuite (PPC version):
#	===============================================================================================================
#	target compiler: apple's mpw MrCpp 4.1.0a2 
#		(4.1.0a3 thru 4.1.0a6, the latest release as of this writing, have 
#		 newly introduced problems and can not be used for STLport compilation)
#	
#	(1) run the shell script listed below to compile and link the PPC version of testsuite as the mpw
#	tool by selecting it and press enter. note only the debugging version of the testsuite mpw tool
#	will be generated by the supplied makefile.
#
#(# PPC (1)
begin
	set MrCpp MrCpp.4.1.0a2
	if !`which "{MrCpp}"`
		set MrCpp MrCpp
	end
	if "{active}" =~ /(Å)¨1:Å/
		directory "{¨1}:"	# setup the working directory
	end
	target "{worksheet}"
	save -a					# save all files (optional)
	unset fullbuild
	#	set fullbuild "-e"	# uncomment this line to force full build
	streamedit MrCpp.mak -o MrCpp.mak -e "1,$ replace -c ° /¥¶0x0a/ ''"		# clean up dos style end-of-lines
	echo -n "¶n####### START BUILDING PPC VERSION OF STL TEST SUITE ####### "; date -s; echo "¶n¶n"
	make {fullbuild} stl_test.PPC -f MrCpp.mak > MrCpp.MakeIt
	set -e exit 0
	set -e compile_status 0
	execute MrCpp.MakeIt
	set -e exit 1
end ·· "{worksheet}"
#)#


#	(2) run the shell script listed below to execute the PPC version of testsuite mpw tool and
#	compare the output with the standard "stl_test.exp" output. note there will be some different
#	output lines generated by mpw testsuite tool because of the different rand() logic employed by
#	MacOS system.
#
#(# PPC (2)
	set stl_test.PPC.output "MrCpp.exp"		# output to separate file
	#set stl_test.PPC.output "dev:stdout"	# output to {worksheet}
	if "{active}" =~ /(Å)¨1:Å/
		directory "{¨1}:"	# setup the working directory
	end
	target "{worksheet}"
	begin
		echo "###### START:    stl_test.PPC"
		stl_test.PPC < stdin > "{stl_test.PPC.output}"	# run
		echo "###### FINISHED: stl_test.PPC"
	end ·· "{worksheet}"
	if "{stl_test.PPC.output}" != "dev:stdout"
		set exit 0
		comparefiles "{stl_test.PPC.output}" stl_test.exp # compare output file
		set exit 1
	end
#)#





#	*** how to try out the testsuite (68K version):
#	===============================================================================================================
#	target compiler: apple's mpw SCpp 8.8.2
#		(SCpp 8.8.4, which shares the same front-end with MrCpp, is suffered from the same problems as MrCpp, 
#		 so it can not be used for STLport compilation)
#
#	(1) run the shell script listed below to compile and link the 68K version of testsuite as the mpw
#	tool by selecting it and press enter. note only the debugging version of the testsuite mpw tool
#	will be generated by the supplied makefile.
#
#(# 68K (1)
begin
	if "{active}" =~ /(Å)¨1:Å/
		directory "{¨1}:"	# setup the working directory
	end
	target "{worksheet}"
	save -a					# save all files (optional)
	unset fullbuild
	#	set fullbuild "-e"	# uncomment this line to force full build
	streamedit SCpp.mak -o SCpp.mak -e "1,$ replace -c ° /¥¶0x0a/ ''"		# clean up dos style end-of-lines
	echo -n "¶n####### START BUILDING 68K VERSION OF STL TEST SUITE ####### "; date -s; echo "¶n¶n"
	make {fullbuild} stl_test.68K -f SCpp.mak > SCpp.MakeIt
	set -e exit 0
	set -e compile_status 0
	execute SCpp.MakeIt 
	set -e exit 1
end ·· "{worksheet}"
#)#


#	(2) run the shell script listed below to execute the 68K version of testsuite mpw tool and
#	compare the output with the standard "stl_test.exp" output. note there will be some different
#	output lines generated by mpw testsuite tool because of the different rand() logic employed by
#	MacOS system.
#
#(# 68K (2)
	set stl_test.68K.output "SCpp.exp"		# output to separate file
	#set stl_test.68K.output "dev:stdout"	# output to {worksheet}
	if "{active}" =~ /(Å)¨1:Å/
		directory "{¨1}:"	# setup the working directory
	end
	target "{worksheet}"
	begin
		echo "###### START:    stl_test.68K"
		stl_test.68K < stdin > "{stl_test.68K.output}"	# run
		echo "###### FINISHED: stl_test.68K"
	end ·· "{worksheet}"
	if "{stl_test.68K.output}" != "dev:stdout"
		set exit 0
		comparefiles "{stl_test.68K.output}" stl_test.exp # compare output file
		set exit 1
	end
#)#


# - end of ReadMe.MPW
