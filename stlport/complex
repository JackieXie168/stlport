/*
 * Copyright (c) 1999
 * Silicon Graphics Computer Systems, Inc.
 *
 * Copyright (c) 1999 
 * Boris Fomitchev
 *
 * This material is provided "as is", with absolutely no warranty expressed
 * or implied. Any use is at your own risk.
 *
 * Permission to use or copy this software for any purpose is hereby granted 
 * without fee, provided the above notices are retained on all copies.
 * Permission to modify the code and to distribute modified code is granted,
 * provided the above notices are retained, and a notice that the code was
 * modified is included with the above copyright notice.
 *
 */ 

#ifndef __sgi_template_complex
#define __sgi_template_complex

# ifndef __STL_OUTERMOST_HEADER_ID
#  define __STL_OUTERMOST_HEADER_ID  0x10
#  include <stl/_prolog.h>
# endif

# ifdef __SGI_STL_OWN_IOSTREAMS
// This header declares the template class complex, as described in 
// in the draft C++ standard.  Single-precision complex numbers
// are complex<float>, double-precision are complex<double>, and
// quad precision are complex<long double>.

// Note that the template class complex is declared within namespace
// std, as called for by the draft C++ standard
  
#  define __STL_COMPLEX_NAMESPACE __STLPORT_STD
#  include <stl/_complex.h>
# else
#  define __STL_COMPLEX_NAMESPACE __STL_VENDOR_STD
#  include <wrap_std/complex>
# endif

# if (__STL_OUTERMOST_HEADER_ID ==  0x10 )
#  include <stl/_epilog.h>
#  undef __STL_OUTERMOST_HEADER_ID
# endif

#endif /* __sgi_template_complex */

// Local Variables:
// mode:C++
// End:
