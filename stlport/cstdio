/*
 * Copyright (c) 1999 
 * Boris Fomitchev
 *
 * This material is provided "as is", with absolutely no warranty expressed
 * or implied. Any use is at your own risk.
 *
 * Permission to use or copy this software for any purpose is hereby granted 
 * without fee, provided the above notices are retained on all copies.
 * Permission to modify the code and to distribute modified code is granted,
 * provided the above notices are retained, and a notice that the code was
 * modified is included with the above copyright notice.
 *
 */

#ifndef __STLPORT_CSTDIO
# define __STLPORT_CSTDIO

# if ! defined (__STL_WINCE)

# ifndef __STL_OUTERMOST_HEADER_ID
#  define __STL_OUTERMOST_HEADER_ID 15
#  include <stl/_prolog.h>
# endif

# if defined (__STL_USE_NEW_C_HEADERS)
#  include __STL_NATIVE_CPP_C_HEADER(cstdio)
# else
#  include __STL_NATIVE_C_HEADER(stdio.h)
# endif

# ifdef __MWERKS__
#  undef stdin
#  undef stdout
#  undef stderr
#  define stdin  	(&__STL_VENDOR_CSTD::__files[0])
#  define stdout	(&__STL_VENDOR_CSTD::__files[1])
#  define stderr	(&__STL_VENDOR_CSTD::__files[2])
# endif

#  if defined (__STL_MSVC) || defined (__ICL)
inline
int vsnprintf(char *s1, size_t n, const char *s2, va_list v)
{
	return __STL_VENDOR_CSTD::_vsnprintf(s1, n, s2, v);
}
#  endif

# ifdef __STL_IMPORT_VENDOR_CSTD 
__STL_BEGIN_NAMESPACE
using __STL_VENDOR_CSTD::FILE;
using __STL_VENDOR_CSTD::fpos_t;
using __STL_VENDOR_CSTD::size_t;

// undef obsolete macros
# undef putc
# undef getc
# undef getchar
# undef putchar
# undef feof
# undef ferror

#  ifndef __STL_NO_CSTD_FUNCTION_IMPORTS
using __STL_VENDOR_CSTD::clearerr;
using __STL_VENDOR_CSTD::fclose;
using __STL_VENDOR_CSTD::feof;
using __STL_VENDOR_CSTD::ferror;
using __STL_VENDOR_CSTD::fflush;
using __STL_VENDOR_CSTD::fgetc;
using __STL_VENDOR_CSTD::fgetpos;
using __STL_VENDOR_CSTD::fgets;
using __STL_VENDOR_CSTD::fopen;
using __STL_VENDOR_CSTD::fprintf;
using __STL_VENDOR_CSTD::fputc;
using __STL_VENDOR_CSTD::fputs;
using __STL_VENDOR_CSTD::fread;
using __STL_VENDOR_CSTD::freopen;
using __STL_VENDOR_CSTD::fscanf;
using __STL_VENDOR_CSTD::fseek;
using __STL_VENDOR_CSTD::fsetpos;
using __STL_VENDOR_CSTD::ftell;
using __STL_VENDOR_CSTD::fwrite;
using __STL_VENDOR_CSTD::getc;
using __STL_VENDOR_CSTD::getchar;
using __STL_VENDOR_CSTD::gets;
using __STL_VENDOR_CSTD::perror;
using __STL_VENDOR_CSTD::printf;
using __STL_VENDOR_CSTD::putc;
using __STL_VENDOR_CSTD::putchar;
using __STL_VENDOR_CSTD::puts;
using __STL_VENDOR_CSTD::remove;
using __STL_VENDOR_CSTD::rename;
using __STL_VENDOR_CSTD::rewind;
using __STL_VENDOR_CSTD::scanf;
using __STL_VENDOR_CSTD::setbuf;
using __STL_VENDOR_CSTD::setvbuf;
using __STL_VENDOR_CSTD::sprintf;
using __STL_VENDOR_CSTD::sscanf;
using __STL_VENDOR_CSTD::tmpfile;
using __STL_VENDOR_CSTD::tmpnam;
using __STL_VENDOR_CSTD::ungetc;
using __STL_VENDOR_CSTD::vfprintf;
using __STL_VENDOR_CSTD::vprintf;
using __STL_VENDOR_CSTD::vsprintf;
#   if defined (__MWERKS__) || defined (__STL_MSVC) || defined (__ICL) || \
( defined (__BORLANDC__) && __BORLANDC__ > 0x530) || ( defined (__STL_USE_GLIBC) && ! defined (__CYGWIN__))
using __STL_VENDOR_CSTD::vsnprintf;
#   endif
#  endif /* __STL_NO_CSTD_FUNCTION_IMPORTS */
__STL_END_NAMESPACE
# endif /* __STL_IMPORT_VENDOR_CSTD */

# if (__STL_OUTERMOST_HEADER_ID == 15)
#  include <stl/_epilog.h>
#  undef __STL_OUTERMOST_HEADER_ID
# endif

# endif /* ! defined (__STL_WINCE) */

#endif

// Local Variables:
// mode:C++
// End:
